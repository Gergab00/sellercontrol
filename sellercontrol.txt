<?php
/*
Plugin Name: sellercontrol
Plugin URI: https://github.com/Gergab00/sellercontrol
Description: Plugin de control de los seller control.
Version:1.0-SNAPSHOT
Author:Gerardo Gabriel González Velázquez
Author URI: https://github.com/Gergab00
License: GPLv2 https://es-mx.wordpress.org/about/license/
PHP Version: 7.0
 *
 * @category Form
 * @package  sellercontrol
 * @author   Gerardo González
 * @license  GPLv2 http://www.gnu.org/licenses/gpl-2.0.txt
 * @link     https://github.com/Gergab00
 */

// Cuando el plugin se active se crea la tabla del mismo si no existe
register_activation_hook(__FILE__, 'sellercontrol_init');

/**
 * Realiza las acciones necesarias para configurar el plugin cuando se activa
 *
 * @return void
 */
function sellercontrol_init()
{
    global $wpdb; // Este objeto global nos permite trabajar con la BD de WP
    // Crea la tabla si no existe
    $tabla_sellercontrol = $wpdb->prefix . 'sellercontrol';
    $charset_collate = $wpdb->get_charset_collate();
    $query = "CREATE TABLE IF NOT EXISTS $tabla_sellercontrol (
        `id` INT(10) NOT NULL AUTO_INCREMENT , 
        `factura` VARCHAR(100) NOT NULL , 
        `fecha` DATE NOT NULL , 
        `proveedor` VARCHAR(100) NOT NULL , 
        `forma_pago` VARCHAR(100) NOT NULL , 
        `iva` DOUBLE(10,2) NOT NULL , 
        `monto` DOUBLE(10,2) NOT NULL , 
        `created_at` datetime NOT NULL,
        PRIMARY KEY (`id`)
        ) $charset_collate;";
    // La función dbDelta que nos permite crear tablas de manera segura se
    // define en el fichero upgrade.php que se incluye a continuación
    include_once ABSPATH . 'wp-admin/includes/upgrade.php';
    dbDelta($query);
}

// El formulario puede insertarse en cualquier sitio con este shortcode
// El código de la función que carga el shortcode hace una doble función:
// 1-Graba los datos en la tabla si ha habido un envío desde el formulario
// 2-Muestra el formulario

add_shortcode('sellercontrol_factura_form', 'factura_form');

/**
 * Crea y procesa el formulario que rellenan los registros
 *
 * @return string
 */
function factura_form()
{
    
    global $wpdb; // Este objeto global nos permite trabajar con la BD de WP
    // Si viene del formulario  grabamos en la base de datos
    if (!empty($_POST)
        && $_POST['factura'] != '' 
        && $_POST['fecha'] != ''
        && $_POST['proveedor'] != ''
        && $_POST['forma_pago'] != ''
        && $_POST['iva'] != ''
        && $_POST['monto'] != ''
    ) {
        $tabla_sellercontrol = $wpdb->prefix . 'sellercontrol';
        $factura = sanitize_text_field($_POST['factura']);
        $fecha = date($_POST['fecha']);
        $proveedor = sanitize_text_field($_POST['proveedor']);
        $forma_pago = sanitize_text_field($_POST['forma_pago']);
        $iva = (double) $_POST['iva'];
        $monto = (double) $_POST['monto'];
        $created_at = date('Y-m-d H:i:s');

        $wpdb->insert(
            $tabla_sellercontrol,
            array(
                'factura' => $factura,
                'fecha' => $fecha,
                'proveedor' => $proveedor,
                'forma_pago' => $forma_pago,
                'iva' => $iva,
                'monto' => $monto,
                'created_at' => $created_at,
            )
        );
        echo    '<div class="alert alert-success" role="alert">
                Registro Creado con Éxito.
                </div>';
    }
    // Carga esta hoja de estilo para poner más bonito el formulario
    //wp_enqueue_style('css_aspirante', plugins_url('style.css', __FILE__));
    ob_start();
    ?>
    <form action="<?php get_the_permalink();?>" method="post" id="form_factura"
        class="cuestionario">
        <div class="row">
        <?php wp_nonce_field('graba_factura', 'factura_nonce');?>
        <div class="form-input col-sm-12 col-lg-6">
            <label class="form-label" for="factura">Factura</label>
            <input class="form-control" type="text" name="factura" id="factura" required>
        </div>
        <div class="form-input col-sm-12 col-lg-6">
            <label for='fecha'>Fecha</label>
            <input class="form-control" type="date" name="fecha" id="fecha" required>
        </div>
        <div class="form-input col-sm-12 col-lg-6">
            <label class="form-label" for="proveedor">Proveedor</label>
            <input class="form-control" list="datalistOptions" id="proveedor" name="proveedor" placeholder="Buscar Proveedor...">
                <datalist id="datalistOptions">
                    <option value="Juguetialegria">
                    <option value="Amazon">
                    <option value="Neza">
                    <option value="Hasbro">
                    <option value="Iztapalapa">
                </datalist>
        </div>
        <div class="form-input col-sm-12 col-lg-6">
            <label class="form-label" for="forma_pago">Forma de Pago</label>
            <input class="form-control" list="datalistOptions" id="forma_pago" name="forma_pago" placeholder="Buscar Forma de Pago...">
                <datalist id="datalistOptions">
                    <option value="Efectivo">
                    <option value="Tarjeta de Débito">
                    <option value="Tarjeta de Crédito Home Depot">
                    <option value="Tarjeta de Crédito Banamex Gold">
                    <option value="Tarjeta de Crédito Bancomer">
                </datalist>
            
        </div>
        <div class="form-input col-sm-12 col-lg-6">
            <label class="form-label" for="iva">IVA</label>
            <div class="input-group">
                <span class="input-group-text">$</span>
                <input type="number" class="form-control" step="0.01" name="iva" placeholder="0.00" required>
            </div>
        </div>
        <div class="form-input col-sm-12 col-lg-6">
            <label class="form-label" for="monto">Monto</label>
            <div class="input-group">
                <span class="input-group-text">$</span>
                <input type="number" class="form-control" step="0.01" name="monto" placeholder="0.00" required>
            </div>
        </div>
        </div>
    <div class="row mt-3">
<div class="form-input col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <table class="table table-bordered table-hover" id="invoiceItem">	
        <tr>
            <th width="2%"><input id="checkAll" class="formcontrol" type="checkbox"></th>
            <th width="15%">Prod. No</th>
            <th width="38%">Nombre Producto</th>
            <th width="15%">Cantidad</th>
            <th width="15%">Precio</th>								
            <th width="15%">Total</th>
        </tr>							
        <tr>
            <td><input class="itemRow" type="checkbox"></td>
            <td><input type="text" name="productCode[]" id="productCode_1" class="form-control" autocomplete="off"></td>
            <td><input type="text" name="productName[]" id="productName_1" class="form-control" autocomplete="off"></td>			
            <td><input type="number" name="quantity[]" id="quantity_1" class="form-control quantity" autocomplete="off"></td>
            <td><input type="number" name="price[]" id="price_1" class="form-control price" autocomplete="off"></td>
            <td><input type="number" name="total[]" id="total_1" class="form-control total" autocomplete="off"></td>
        </tr>						
    </table>
</div>
</div>
<div class="row">
<div class="form-input col-xs-6 col-sm-3 col-md-3 col-lg-3">
    <button class="btn btn-danger delete" id="removeRows" type="button">- Borrar</button>
</div>
<div class="form-input col-xs-6 col-sm-3 col-md-3 col-lg-3">
<button class="btn btn-success" id="addRows" type="button">+ Agregar Más</button>
</div>
<div class="form-input col-xs-6 col-sm-3 col-md-3 col-lg-3">
            <input class="btn btn-success" type="submit" value="Registrar">
        </div>
</div>

    </form>
    <?php

    return ob_get_clean();
}

add_action("admin_menu", "registro_factura_menu");

/**
 * Agrega el menú del plugin al formulario de WordPress
 *
 * @return void
 */
function registro_factura_menu()
{
    add_menu_page("Registro de Facturas", "Facturas", "manage_options",
        "registro_factura_menu", "sellercontrol_admin", "dashicons-feedback", 75);
}

function sellercontrol_admin()
{
    global $wpdb;
    $tabla_sellercontrol = $wpdb->prefix . 'sellercontrol';
    $registros = $wpdb->get_results("SELECT * FROM $tabla_sellercontrol");
    echo '<div class="wrap"><h1>Registro de Compras</h1>';
    echo '<table class="wp-list-table widefat fixed striped">';
    echo '<thead><tr><th width="30%">Factura</th><th width="20%">Fecha</th>';
    echo '<th>Proveedor</th><th>Forma de Pago</th><th>IVA</th><th>Monto</th><th>WP</th><th>Total</th>';
    echo '</tr></thead>';
    echo '<tbody id="the-list">';
    foreach ($registros as $registro) {
        $factura = esc_textarea($registro->factura);
        $fecha = esc_textarea($registro->fecha);
        $proveedor = (int) $registro->proveedor;
        $forma_pago = (int) $registro->forma_pago;
        $iva = (int) $registro->iva;
        $monto = (int) $registro->monto;
        echo "<tr><td><a href='#' title='$factura'>$factura</a></td>";
        echo "<td>$fecha</td><td>$proveedor</td><td>$forma_pago</td>";
        echo "<td>$iva</td><td>$monto</td>";
        echo "</tr>";
    }
    echo '</tbody></table></div>';
}

/**
 * Devuelve la IP del usuario que está visitando la página
 * Código fuente: https://stackoverflow.com/questions/6717926/function-to-get-user-ip-address
 *
 * @return string
 */
function Kfp_Obtener_IP_usuario()
{
    foreach (array('HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'HTTP_X_FORWARDED',
        'HTTP_X_CLUSTER_CLIENT_IP', 'HTTP_FORWARDED_FOR', 'HTTP_FORWARDED',
        'REMOTE_ADDR') as $key) {
        if (array_key_exists($key, $_SERVER) === true) {
            foreach (array_map('trim', explode(',', $_SERVER[$key])) as $ip) {
                if (filter_var($ip, FILTER_VALIDATE_IP) !== false) {
                    return $ip;
                }
            }
        }
    }
}

add_action("wp_enqueue_scripts", "sellercontrol_insertar_js");

function sellercontrol_insertar_js(){
    
    wp_register_script('invoice', plugins_url( '/js/invoice.js', __FILE__), array('jquery'), '1', true );
    wp_enqueue_script('invoice');
    
}
?>